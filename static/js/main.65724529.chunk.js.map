{"version":3,"sources":["modules/cliente/context/ClienteContext.js","modules/cliente/context/ClienteReducer.js","environments/environments.js","services/pedidoService.js","services/pedidoproductoService.js","modules/cliente/context/ClienteState.js","assets/img/logo_transparente.png","components/ClienteFooter.js","components/ClienteHeader.js","modules/cliente/components/ClienteTablaItemCarrito.js","modules/cliente/components/ClienteTablaCarrito.js","modules/cliente/components/ClienteProcesarPedido.js","modules/cliente/components/ClientePagoCarrito.js","modules/cliente/screens/carrito/ClienteCarritoScreen.js","services/categoriaService.js","services/productoService.js","services/numerosAleatorios.js","modules/cliente/components/ClienteCarruselIndex.js","modules/cliente/components/ClienteHeaderIndex.js","modules/cliente/components/ClienteOfertasDiaCardIndex.js","modules/cliente/components/ClienteOfertasDiaIndex.js","modules/cliente/screens/index/ClienteIndexScreen.js","services/clienteService.js","services/usuarioService.js","modules/cliente/components/ClienteFormularioLogin.js","modules/cliente/screens/login/ClienteLoginScreen.js","modules/cliente/components/ClienteFiltroFormCheckProducto.js","modules/cliente/components/ClienteAsideFiltroFormCheckProducto.js","modules/cliente/components/ClienteListaCardFormCheckProducto.js","modules/cliente/components/ClienteListaFormCheckProducto.js","modules/cliente/screens/producto/ClienteProductoScreen.js","modules/cliente/components/ClienteFormularioRegistro.js","modules/cliente/screens/registro/ClienteRegistroScreen.js","modules/cliente/ClienteRouter.js","AppRouter.js","App.js","index.js"],"names":["ClienteContext","createContext","ClienteReducer","stateActual","action","type","globalPedidos","data","clienteActivo","cliente","token","estadoBotonProcesar","estadoBotonFinalizarPedido","URL_BACKEND","postPedido","objPedido","a","fetch","method","headers","body","JSON","stringify","peticion","json","postPedidoProducto","objPedidoProducto","ClienteState","props","useReducer","state","dispatch","Provider","value","inicioSesionCliente","objCliente","localStorage","setItem","cerrarSesionCliente","agregarProducto","objProducto","find","producto_id","modificarPedido","map","nuevoGlobalPedidos","eliminarProducto","id","temporal","filter","pedido","finalizarPedido","monto","cliente_id","pedido_fecha","moment","format","pedido_monto","pedido_pagado","pedido_insumo","pedido_preparacion","pedido_terminado","pedido_despacho","pedido_entregado","pedidoProductoItems","cantidad","precio","producto_pre","pedido_id","pedidoproducto_items","then","nuevoObjPedidoProducto","pedidoproducto_id","Swal","fire","position","icon","title","showConfirmButton","timer","botonProcesar","estadoProcesar","botonFinalizar","estadoFinalizar","children","ClienteFooter","className","src","logo","alt","ClienteHeader","pagina","useContext","Navbar","collapseOnSelect","expand","Brand","href","loading","Toggle","aria-controls","Collapse","Nav","activeClassName","to","cliente_nom","cliente_apepat","hidden","onClick","ClienteTablaItemCarrito","modificarProducto","useState","c","actualizarC","useEffect","pedidoExistente","verificar","producto_img","producto_nom","cant","restar","sumar","ClienteTablaCarrito","ClienteProcesarPedido","montoTotal","setMontoTotal","history","useHistory","montoTotalPedido","length","disabled","push","ClientePagoCarrito","onSubmit","e","preventDefault","ClienteCarritoScreen","getCategorias","getProductos","arregloSinRepetir","arreglo","listo","aleatorio","Math","floor","random","n","ClienteCarruselIndex","arregloProductos","arregloCategorias","slider","setSlider","getAllProductos","filtradoProductos","item","i","pro","categoria_id","obj","categoria_nombre","categoria_nom","Carousel","fade","prevIcon","nextIcon","Item","Caption","Button","ClienteHeaderIndex","ClienteOfertasDiaCardIndex","producto","ClienteOfertasDiaIndex","cardProducto","setCardProducto","ClienteIndexScreen","setPro","cat","setCat","objProductos","objCategorias","getClienteById","getClienteByDNI","dni","postCliente","getUsuarioByEmail","email","postUsuario","objUsuario","formularioVacio","usuario_email","usuario_password","ClienteFormularioLogin","formulario","setFormulario","handleChange","valor","target","checked","name","handleSubmit","form","trim","text","mailformat","match","usuarioEmail","showClass","popup","hideClass","usuario_id","clienteLogueado","noValidate","autoComplete","htmlFor","placeholder","onChange","required","ClienteLoginScreen","ClienteFiltroFormCheckProducto","categoria","filtradoCategorias","modificarProductoCategoria","arregloFiltrado","arregloFiltro","indexOf","splice","nuevo","ClienteAsideFiltroFormCheckProducto","categorias","ClienteListaCardFormCheckProducto","proCat","modoBoton","setModoBoton","ClienteListaFormCheckProducto","productoCategoria","ClienteProductoScreen","setProductoCategoria","productoCategoriaGlobal","setProductoCategoriaGlobal","setCategorias","setArregloFiltro","console","log","cliente_apemat","cliente_dni","cliente_tel","cliente_dir","cliente_distrito","cliente_distrito_nombre","usuario_password_confirm","ClienteFormularioRegistro","distrito","options","selectedIndex","dataUsuario","tipousuario_id","usuario_estado","dataCliente","cliente_estado","rpta","minLength","maxLength","aria-describedby","ClienteRegistroScreen","ClienteRouter","path","component","exact","AppRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65724529.chunk.js","sourcesContent":["// Creamos el contexto para el modulo de Clientes\r\n\r\nimport { createContext } from \"react\";\r\n\r\nconst ClienteContext = createContext();\r\n\r\nexport default ClienteContext;","const ClienteReducer = (stateActual, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"ACTUALIZAR_GLOBAL_PEDIDOS\":\r\n            return {\r\n                ...stateActual,\r\n                globalPedidos: [...action.data],\r\n            }\r\n\r\n        case \"ELIMINAR_PRODUCTO\":\r\n            return {\r\n                ...stateActual,\r\n                globalPedidos: action.data,\r\n            }\r\n\r\n        case \"FINALIZAR_PEDIDO\":\r\n            return {\r\n                ...stateActual,\r\n                globalPedidos: [...action.data],\r\n            }\r\n\r\n        case \"INICIO_SESION\":\r\n            return {\r\n                ...stateActual,\r\n                clienteActivo: { ...action.data.cliente },\r\n                token: action.data.token,\r\n            }\r\n\r\n        case \"CERRAR_SESION\":\r\n            return {\r\n                ...stateActual,\r\n                clienteActivo: action.data,\r\n            }\r\n\r\n        case \"BOTON_PROCESAR\":\r\n            return {\r\n                ...stateActual,\r\n                estadoBotonProcesar: action.data,\r\n            }\r\n\r\n        case \"BOTON_FINALIZAR\":\r\n            return {\r\n                ...stateActual,\r\n                estadoBotonFinalizarPedido: action.data,\r\n            }\r\n    }\r\n};\r\n\r\nexport default ClienteReducer;\r\n\r\n/**\r\n * stateActual, es el estado actual de la variable de estado que se quiere modificar, que viene del ClienteState.\r\n * action, es lo que se recibe del dispatch que se encuentra en ClienteState.\r\n * TODO lo que retorna ClienteReducer es el nuevo valor o valor de reemplazo de mi variable de estado.\r\n */","// Juan\r\nexport const URL_BACKEND = \"https://5fa5ce67085bf700163de08d.mockapi.io\";\r\n\r\n// Alessandro\r\n// export const url_api = \"https://5f863851c8a16a0016e6aca1.mockapi.io\";","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const postPedido = async (objPedido) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/pedido`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(objPedido),\r\n    });\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const postPedidoProducto = async (objPedidoProducto) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/pedidoproducto`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(objPedidoProducto),\r\n    });\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import React, { useReducer } from 'react';\r\nimport ClienteContext from './ClienteContext';\r\nimport ClienteReducer from './ClienteReducer';\r\nimport moment from \"moment\";\r\nimport { postPedido } from '../../../services/pedidoService';\r\nimport { postPedidoProducto } from '../../../services/pedidoproductoService';\r\nimport Swal from \"sweetalert2\";\r\n\r\n// item del objeto producto. SOLO ES INFORMATIVO\r\n/*\r\nconst productoItems = {\r\n    \"producto_id\": 1,\r\n    \"categoria_id\": 1,\r\n    \"categoria_nombre\": \"categoria nombre\",\r\n    \"producto_nom\": \"producto_nom post\",\r\n    \"producto_pre\": 120,\r\n    \"producto_img\": \"producto_img post\",\r\n    \"producto_estado\": true\r\n};\r\n*/\r\n\r\n// items del arreglo de pedidos. SOLO ES INFORMATIVO\r\n/*\r\nconst arregloPedido = [\r\n    {\r\n        \"producto_id\": 1,\r\n        \"categoria_id\": 1,\r\n        \"categoria_nombre\": \"categoria nombre\",\r\n        \"producto_nom\": \"producto_nom post\",\r\n        \"producto_pre\": 120,\r\n        \"producto_img\": \"producto_img post\",\r\n        \"producto_estado\": true,\r\n\r\n        \"cantidad\": 123,\r\n        \"monto\": 123,\r\n    }\r\n];\r\n*/\r\n\r\n// tabla pedido. SOLO ES INFORMATIVO\r\n/*\r\nconst pedido = {\r\n    \"pedido_id\": \"1\",\r\n    \"cliente_id\": 1,\r\n    \"pedido_fecha\": moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    \"pedido_monto\": 87,\r\n    \"pedido_pagado\": false,\r\n    \"pedido_insumo\": false,\r\n    \"pedido_preparacion\": false,\r\n    \"pedido_terminado\": false,\r\n    \"pedido_despacho\": false,\r\n    \"pedido_entregado\": false\r\n}\r\n*/\r\n\r\n\r\nconst ClienteState = (props) => {\r\n\r\n    const [state, dispatch] = useReducer(ClienteReducer, {\r\n        globalPedidos: [],\r\n        clienteActivo: null,\r\n        estadoBotonProcesar: true,\r\n        estadoBotonFinalizarPedido: true,\r\n    });\r\n\r\n    // SCREEN PRODUCTOS: AGREGAR PRODUCTO\r\n    const agregarProducto = (objProducto) => {\r\n\r\n        // desestructurando state\r\n        const { globalPedidos } = state;\r\n\r\n        // verificar si existe un pedido para el producto seleccionado\r\n        const pedidoActual = globalPedidos.find(objPedido => objPedido.producto_id === objProducto.producto_id);\r\n        // console.log(pedidoActual);\r\n\r\n        // preguntamos si el pedido actual existe, es decir, que la mesa global seleccionada tenga un pedido previamnete en nuestro arreglo \"globalPedidos\"\r\n        if (pedidoActual) {\r\n            // ya existia el producto en el arreglo de pedidos: globalPedidos\r\n            const modificarPedido = globalPedidos.map(objPedido => {\r\n                if (objPedido.producto_id === objProducto.producto_id) {\r\n                    return {\r\n                        ...objProducto,\r\n                    }\r\n                }\r\n                return {\r\n                    ...objPedido,\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n                data: modificarPedido,\r\n            });\r\n\r\n        } else {\r\n            // No exisitia el producto en el arreglo de pedidos: globalPedidos\r\n            // Por tanto, debemos de crear el pedido nuevo, en el arreglo global de pedidos\r\n            const nuevoGlobalPedidos = [\r\n                ...globalPedidos,\r\n                {\r\n                    ...objProducto,\r\n                },\r\n            ];\r\n\r\n            dispatch({\r\n                type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n                data: nuevoGlobalPedidos,\r\n            });\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // ELIMINAR PRODUCTO DE CARRITO\r\n    const eliminarProducto = (id) => {\r\n\r\n        // console.log(\"id enviado\");\r\n        // console.log(id);\r\n\r\n        const { globalPedidos } = state;\r\n\r\n        let temporal = [...globalPedidos];\r\n\r\n        temporal = temporal.filter(pedido => {\r\n            if (pedido.producto_id == id) {\r\n                return undefined;\r\n            } else {\r\n                return pedido;\r\n            }\r\n        });\r\n\r\n        // console.log(\"TEMPORAL\");\r\n        // console.log(temporal);\r\n\r\n        dispatch({\r\n            type: \"ELIMINAR_PRODUCTO\",\r\n            data: temporal,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    // FINALIZAR PEDIDO\r\n    const finalizarPedido = () => {\r\n\r\n        const { globalPedidos } = state;\r\n\r\n        let monto = 0;\r\n\r\n        globalPedidos.map(pedido => {\r\n            monto = monto + pedido.monto;\r\n        });\r\n\r\n        let objPedido = {\r\n            cliente_id: 1,\r\n            pedido_fecha: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            pedido_monto: monto,\r\n            pedido_pagado: true,\r\n            pedido_insumo: false,\r\n            pedido_preparacion: false,\r\n            pedido_terminado: false,\r\n            pedido_despacho: false,\r\n            pedido_entregado: false\r\n        };\r\n\r\n\r\n        let pedidoProductoItems = globalPedidos.map(pedido => {\r\n            return {\r\n                producto_id: pedido.producto_id,\r\n                cantidad: pedido.cantidad,\r\n                precio: pedido.producto_pre,\r\n                monto: pedido.monto,\r\n            }\r\n        });\r\n\r\n\r\n        let objPedidoProducto = {\r\n            pedido_id: 2,\r\n            pedidoproducto_items: [...pedidoProductoItems],\r\n        }\r\n\r\n        // console.log(\"objeto pedido producto\");\r\n        // console.log(objPedidoProducto);\r\n\r\n\r\n        postPedido(objPedido).then(data => {\r\n            // console.log(\"RESPUESTA DEL SERVIDOR TABLA PEDIDO\");\r\n            // console.log(data);\r\n\r\n            if (data.pedido_id) {\r\n\r\n                let nuevoObjPedidoProducto = {\r\n                    ...objPedidoProducto,\r\n                    pedido_id: data.pedido_id,\r\n                };\r\n\r\n                postPedidoProducto(nuevoObjPedidoProducto).then(data => {\r\n                    // console.log(\"RESPUESTA DEL SERVIDOR TABLA PEDIDO_PRODUCTO\");\r\n                    // console.log(data);\r\n\r\n                    if (data.pedidoproducto_id) {\r\n\r\n                        const nuevoGlobalPedidos = [];\r\n\r\n                        // console.log(\"RESET GLOBAL PEDIDOS\");\r\n                        // console.log(nuevoGlobalPedidos);\r\n\r\n                        dispatch({\r\n                            type: \"FINALIZAR_PEDIDO\",\r\n                            data: nuevoGlobalPedidos,\r\n                        });\r\n\r\n                        Swal.fire({\r\n                            position: 'top-end',\r\n                            icon: 'success',\r\n                            title: 'Su pedido a sido realizado correctamente',\r\n                            showConfirmButton: false,\r\n                            timer: 1500\r\n                        })\r\n                    }\r\n\r\n                })\r\n\r\n            } else {\r\n                // error al procesar el pedido\r\n            }\r\n        });\r\n\r\n\r\n    };\r\n\r\n\r\n    // CLIENTE ACTIVO\r\n    const inicioSesionCliente = (objCliente) => {\r\n        // console.log(\"state cliente\");\r\n        // console.log(objCliente);\r\n\r\n        let cliente = { ...objCliente };\r\n\r\n        let token = true;\r\n\r\n        localStorage.setItem(\"token\", token);\r\n\r\n        dispatch({\r\n            type: \"INICIO_SESION\",\r\n            data: {\r\n                cliente,\r\n                token: token,\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    // CERRAR SESION\r\n    const cerrarSesionCliente = () => {\r\n        dispatch({\r\n            type: \"CERRAR_SESION\",\r\n            data: null,\r\n        });\r\n    };\r\n\r\n\r\n    // ESTADO BOTON PROCESAR PEDIDO\r\n    const botonProcesar = (estadoProcesar) => {\r\n        dispatch({\r\n            type: \"BOTON_PROCESAR\",\r\n            data: estadoProcesar,\r\n        });\r\n    };\r\n\r\n    // ESTADO BOTON FINALIZAR PEDIDO\r\n    const botonFinalizar = (estadoFinalizar) => {\r\n        dispatch({\r\n            type: \"BOTON_FINALIZAR\",\r\n            data: estadoFinalizar,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <ClienteContext.Provider value={{\r\n            globalPedidos: state.globalPedidos,\r\n            clienteActivo: state.clienteActivo,\r\n            estadoBotonProcesar: state.estadoBotonProcesar,\r\n            estadoBotonFinalizarPedido: state.estadoBotonFinalizarPedido,\r\n            inicioSesionCliente: inicioSesionCliente,\r\n            cerrarSesionCliente: cerrarSesionCliente,\r\n            agregarProducto: agregarProducto,\r\n            eliminarProducto: eliminarProducto,\r\n            finalizarPedido: finalizarPedido,\r\n            botonProcesar: botonProcesar,\r\n            botonFinalizar: botonFinalizar,\r\n        }}>\r\n            {props.children}\r\n        </ClienteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ClienteState;\r\n\r\n// ClienteState nos retorna un context\r\n","export default __webpack_public_path__ + \"static/media/logo_transparente.28de5e48.png\";","import React from 'react';\r\n\r\nimport \"./ClienteFooter.css\";\r\nimport logo from \"../assets/img/logo_transparente.png\";\r\n\r\nconst ClienteFooter = () => {\r\n    return (\r\n        <>\r\n            <footer>\r\n                <div className=\"footer-top col-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 footer-top-section-1\">\r\n                            <figure className=\"footer-img-container\">\r\n                                <img className=\"footer-img\" src={logo} alt=\"\" />\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"col-md-5 footer-top-section-2\">\r\n                            <div>\r\n                                <p>Av. Siempre Viva #123</p>\r\n                                <p>San Miguel</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3 footer-top-section-3\">\r\n                            <i className=\"fab fa-facebook\"><span>dulcesmigajas</span></i>\r\n                            <i className=\"fab fa-twitter\"><span>dulcesmigajas</span></i>\r\n                            <i className=\"fab fa-instagram\"><span>dulcesmigajas</span></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer-bottom col-12\">\r\n                    <p>© Copyright xxx - 2020</p>\r\n                </div>\r\n            </footer>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteFooter;\r\n","import React, { useContext } from 'react';\r\nimport { Button, Form, FormControl, Nav, Navbar } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport logo from \"./../assets/img/logo_transparente.png\";\r\nimport ClienteContext from '../modules/cliente/context/ClienteContext';\r\n\r\nimport \"./ClienteHeader.css\";\r\n\r\nconst ClienteHeader = ({ pagina }) => {\r\n\r\n    const { clienteActivo, cerrarSesionCliente } = useContext(ClienteContext);\r\n\r\n    return (\r\n        <header className=\"header-2\">\r\n            <Navbar className=\"p-0 contenedor__navbar\" collapseOnSelect expand=\"md\">\r\n\r\n                <Navbar.Brand className=\"p-0\" href=\"/\">\r\n                    <img src={logo} alt=\"\" loading=\"lazy\" />\r\n                </Navbar.Brand>\r\n\r\n                <Navbar.Toggle className=\"d-lg-none\" aria-controls=\"responsive-navbar-nav\" >\r\n                    <span className=\"navbar-toggler-icon\">\r\n                        <i className=\"fas fa-bars\"></i>\r\n                    </span>\r\n                </Navbar.Toggle>\r\n\r\n                <Navbar.Collapse id=\"responsive-navbar-nav contenedor__navbar-colapsado\">\r\n                    <Nav className=\"mr-auto mt-2 mt-lg-0 contenedor__navbar-colapsado-nav\">\r\n                        <NavLink className=\"nav-link item-enlace\" activeClassName=\"active\" to={\"/\"} ><span className=\"item-enlace-texto\">INICIO</span></NavLink>\r\n                        <NavLink className=\"nav-link item-enlace\" activeClassName=\"active\" to={\"/productos\"} ><span className=\"item-enlace-texto\">PRODUCTOS</span></NavLink>\r\n                        <NavLink className=\"nav-link item-enlace\" activeClassName=\"active\" to={\"/\"} ><span className=\"item-enlace-texto\">NOSOTROS</span></NavLink>\r\n                        <NavLink className=\"nav-link item-enlace\" activeClassName=\"active\" to={\"/\"} ><span className=\"item-enlace-texto\">CONTACTO</span></NavLink>\r\n\r\n                        {/* <Nav.Link className=\"item-enlace item-busqueda py-0\">\r\n                            <Form inline className=\"my-2 my-lg-0 mr-3 item-busqueda-form\">\r\n                                <FormControl className=\"mr-sm-2 item-busqueda-form-input\" type=\"text\" placeholder=\"Búsqueda\" />\r\n                                <Button variant=\"my-2 my-sm-0 item-busqueda-form-button\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </Button>\r\n                            </Form>\r\n                        </Nav.Link> */}\r\n\r\n                        {/* <NavLink className=\"item-enlace item-carrito nav-link\" to={\"/login\"}>\r\n                            <div>\r\n                                <i class=\"fas fa-user mr-3\"><span>Login</span></i>\r\n                            </div>\r\n                        </NavLink>\r\n\r\n                        <NavLink className=\"item-enlace item-carrito nav-link\" to={\"/registro\"}>\r\n                            <div>\r\n                                <i class=\"fas fa-user-plus mr-3\"><span>Registro</span></i>\r\n                            </div>\r\n                        </NavLink> */}\r\n\r\n                        {/* SESION INICIADA */}\r\n                        <NavLink className={clienteActivo ? \"item-enlace item-login nav-link\" : \"item-enlace item-carrito nav-link\"} to={clienteActivo ? \"#\" : \"/login\"}>\r\n                            <div>\r\n                                {\r\n                                    clienteActivo === null ?\r\n                                        <i className=\"fas fa-user-plus mr-3\"><span>Login</span></i>\r\n                                        :\r\n                                        <i className=\"fas fa-user-tie mr-3\"><span>{clienteActivo.cliente_nom} {clienteActivo.cliente_apepat}</span></i>\r\n                                }\r\n                            </div>\r\n                        </NavLink>\r\n\r\n                        <NavLink className=\"item-enlace item-carrito nav-link\" to={\"/registro\"} hidden={clienteActivo === null ? false : true}>\r\n                            <div>\r\n                                <i className=\"fas fa-user mr-3\"><span>Registro</span></i>\r\n                            </div>\r\n                        </NavLink>\r\n\r\n                        <NavLink className=\"item-enlace item-carrito nav-link\" to={\"/\"} hidden={clienteActivo === null ? true : false}>\r\n                            <div>\r\n                                <i className=\"fas fa-sign-out-alt mr-3\" onClick={() => { cerrarSesionCliente() }}><span>Salir</span></i>\r\n                            </div>\r\n                        </NavLink>\r\n                        {/* SESION INICIADA */}\r\n\r\n                        <NavLink className=\"item-enlace item-carrito nav-link\" to={\"/carrito\"}>\r\n                            <div>\r\n                                <i className=\"fas fa-shopping-cart mr-3\"></i>\r\n                            </div>\r\n                        </NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n\r\n            </Navbar>\r\n\r\n            <h2 className=\"text-center\">{pagina}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default ClienteHeader;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport ClienteContext from '../context/ClienteContext';\r\n\r\nconst ClienteTablaItemCarrito = ({ pedido }) => {\r\n\r\n    const { agregarProducto, modificarProducto, eliminarProducto, globalPedidos } = useContext(ClienteContext);\r\n    const [c, actualizarC] = useState(1);\r\n\r\n    const restar = () => {\r\n        if (c !== 1) {\r\n            let cant = c - 1;\r\n            let monto = pedido.producto_pre * cant;\r\n            agregarProducto({\r\n                ...pedido,\r\n                cantidad: cant,\r\n                monto: monto,\r\n            })\r\n            actualizarC(c - 1);\r\n        }\r\n    };\r\n\r\n    const sumar = () => {\r\n        let cant = c + 1;\r\n        let monto = pedido.producto_pre * cant;\r\n        agregarProducto({\r\n            ...pedido,\r\n            cantidad: cant,\r\n            monto: monto,\r\n        })\r\n        actualizarC(c + 1);\r\n    };\r\n\r\n    const verificar = () => {\r\n        const pedidoExistente = globalPedidos.find(objPedido => objPedido.producto_id === pedido.producto_id);\r\n        if (pedidoExistente) {\r\n            pedido = { ...pedidoExistente };\r\n            actualizarC(pedido.cantidad);\r\n        }\r\n        // console.log(pedidoExistente);\r\n        \r\n    };\r\n\r\n    useEffect(() => {\r\n        verificar();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <img className=\"info-tabla-cuerpo-img\" src={pedido.producto_img} alt=\"\" />\r\n            </td>\r\n            <td><strong>{pedido.producto_nom}</strong></td>\r\n            <td>S/ {pedido.producto_pre}</td>\r\n            <td>\r\n                <div className=\"cantidad\">\r\n\r\n                    {/* BOTON RESTAR */}\r\n                    <button\r\n                        className=\"boton-cantidad-left\"\r\n                        onClick={() => {\r\n                            restar();\r\n                        }}\r\n                    >\r\n                        -\r\n                    </button>\r\n\r\n\r\n                    {/* CANTIDAD */}\r\n                    <span>{c}</span>\r\n\r\n\r\n                    {/* BOTON SUMAR */}\r\n                    <button\r\n                        className=\"boton-cantidad-right\"\r\n                        onClick={() => {\r\n                            sumar();\r\n                        }}\r\n                    >\r\n                        +\r\n                    </button>\r\n\r\n                </div>\r\n            </td>\r\n            <td>S/ {pedido.monto}</td>\r\n            <td>\r\n                <button\r\n                    className=\"boton-eliminar\"\r\n                    onClick={() => { \r\n                        eliminarProducto(pedido.producto_id)\r\n                    }}\r\n                >\r\n                    x\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ClienteTablaItemCarrito;\r\n","import React, { useContext } from 'react';\r\nimport ClienteContext from '../context/ClienteContext';\r\nimport ClienteTablaItemCarrito from './ClienteTablaItemCarrito';\r\n\r\nconst ClienteTablaCarrito = () => {\r\n\r\n    const { globalPedidos } = useContext(ClienteContext);\r\n\r\n    // console.log(\"GLOBAL PEDIDOS CALIENTE TABLA CARRITO\");\r\n    // console.log(globalPedidos);\r\n\r\n    return (\r\n        <table className=\"table table-striped text-center info-tabla\">\r\n            <thead className=\"info-tabla-cabecera\">\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Producto</th>\r\n                    <th>Precio</th>\r\n                    <th>Cantidad</th>\r\n                    <th>Subtotal</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"info-tabla-cuerpo\">\r\n\r\n                {\r\n                    globalPedidos.map(pedido => {\r\n                        return <ClienteTablaItemCarrito key={pedido.producto_id} pedido={pedido} />\r\n                    })\r\n                }\r\n\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ClienteTablaCarrito;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ClienteContext from '../context/ClienteContext';\r\n\r\nconst ClienteProcesarPedido = () => {\r\n\r\n    const { globalPedidos, estadoBotonProcesar, botonProcesar, clienteActivo } = useContext(ClienteContext);\r\n    const [montoTotal, setMontoTotal] = useState(0);\r\n\r\n    const history = useHistory();\r\n\r\n    const montoTotalPedido = (globalPedidos) => {\r\n\r\n        let monto = 0;\r\n\r\n        globalPedidos.map(pedido => {\r\n            monto = monto + pedido.monto;\r\n        });\r\n\r\n        setMontoTotal(monto);\r\n    };\r\n\r\n    useEffect(() => {\r\n        montoTotalPedido(globalPedidos);\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (globalPedidos.length === 0) {\r\n            botonProcesar(true);\r\n        } else {\r\n            botonProcesar(false);\r\n        }\r\n\r\n    }, [globalPedidos]);\r\n\r\n    return (\r\n        <div className=\"procesar-pedido\">\r\n            <form>\r\n                <div className=\"procesar-pedido-total\">\r\n                    <span className=\"pedido-total-label\">TOTAL</span>\r\n                    <span className=\"pedido-total-label\">S/.</span>\r\n                    <span className=\"pedido-total-monto\">{montoTotal}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <button\r\n                        className={estadoBotonProcesar ? \"procesar-pedido-boton boton-desactivado\" : \"procesar-pedido-boton\"}\r\n                        type=\"button\"\r\n                        disabled={estadoBotonProcesar}\r\n                        onClick={() => {\r\n                            if (clienteActivo === null){\r\n                                history.push(\"/login\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        PROCESAR PEDIDO\r\n                        </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClienteProcesarPedido;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport ClienteContext from '../context/ClienteContext';\r\n\r\nconst ClientePagoCarrito = () => {\r\n\r\n    const { globalPedidos, finalizarPedido, estadoBotonProcesar, estadoBotonFinalizarPedido, botonFinalizar, clienteActivo } = useContext(ClienteContext);\r\n    const [montoTotal, setMontoTotal] = useState(0);\r\n\r\n\r\n    const montoTotalPedido = (globalPedidos) => {\r\n\r\n        let monto = 0;\r\n\r\n        globalPedidos.map(pedido => {\r\n            monto = monto + pedido.monto;\r\n        });\r\n\r\n        setMontoTotal(monto);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        finalizarPedido();\r\n    }\r\n\r\n    useEffect(() => {\r\n        montoTotalPedido(globalPedidos);\r\n    }, [globalPedidos]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (estadoBotonProcesar === false && clienteActivo !== null) {\r\n            botonFinalizar(false);\r\n        } else {\r\n            botonFinalizar(true);\r\n        }\r\n    }, [estadoBotonProcesar, clienteActivo]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"contenido_pago\">\r\n                <div className=\"titulo_pago\">\r\n                    <h5>MI PEDIDO</h5>\r\n                </div>\r\n                <div className=\"total_pago\">\r\n                    <div className=\"totales\">\r\n                        <p>Total</p>\r\n                    </div>\r\n                    <div className=\"detalle\">\r\n                        <p>S/.</p>\r\n                        <p>{montoTotal}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"subtitulo_pago\">\r\n                    <h5>MÉTODO DE PAGO</h5>\r\n                </div>\r\n            </div>\r\n            <div className=\"finalizar-pedido\">\r\n                <button\r\n                    className={estadoBotonFinalizarPedido ? \"finalizar-pedido-boton boton-finalizar\" : \"finalizar-pedido-boton\"}\r\n                    disabled={estadoBotonFinalizarPedido}\r\n                    type=\"submit\"\r\n                >\r\n                    FINALIZAR PEDIDO\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ClientePagoCarrito;\r\n","import React from 'react';\r\nimport ClienteFooter from '../../../../components/ClienteFooter';\r\nimport ClienteHeader from '../../../../components/ClienteHeader';\r\nimport ClienteTablaCarrito from '../../components/ClienteTablaCarrito';\r\nimport ClienteProcesarPedido from '../../components/ClienteProcesarPedido';\r\nimport ClientePagoCarrito from '../../components/ClientePagoCarrito';\r\n\r\nimport \"./ClienteCarritoScreen.css\";\r\n\r\nconst ClienteCarritoScreen = () => {\r\n    \r\n    return (\r\n        <>\r\n            <ClienteHeader pagina=\"CARRITO\" />\r\n\r\n            <main className=\"carrito\">\r\n                <section className=\"info\">\r\n                    <ClienteTablaCarrito />\r\n                    <ClienteProcesarPedido />\r\n                </section>\r\n\r\n                <section className=\"pago\">\r\n                    <ClientePagoCarrito />\r\n                </section>\r\n            </main>\r\n\r\n            <ClienteFooter />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteCarritoScreen;\r\n","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getCategorias = async () => {\r\n    const peticion = await fetch(`${URL_BACKEND}/categoria`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const getCategoriaById = async (categoria_id) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/categoria/${categoria_id}`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import { URL_BACKEND } from \"../environments/environments\";\r\nimport { getCategoriaById } from \"./categoriaService\";\r\n\r\nexport const getProductos = async () => {\r\n    const peticion = await fetch(`${URL_BACKEND}/producto`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const getProductoById = async (producto_id) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/producto/${producto_id}`);\r\n    // console.log(\"peticion\");\r\n    // console.log(peticion);\r\n\r\n    if (peticion.ok === true) {\r\n        const data = await peticion.json();\r\n        const objCategoria = await getCategoriaById(data.categoria_id);\r\n\r\n        const objProducto = {\r\n            ...data,\r\n            objCategoria: objCategoria,\r\n        };\r\n        return objProducto;\r\n    } else {\r\n        return null;\r\n    }\r\n};","// GENERADOR DE NUMEROS ALEATORIOS SIN REPETIR (ID PRODUCTO)\r\nexport const arregloSinRepetir = (cantidad) => {\r\n    let arreglo = [];\r\n    let listo = false;\r\n    let cont = 0;\r\n\r\n    while (!listo) {\r\n        // Retorna un entero aleatorio entre min (incluido) y max (excluido)\r\n        // Math.floor(Math.random() * (max - min)) + min\r\n        const aleatorio = Math.floor(Math.random() * (30 - 1) + 1);\r\n        const rpta = arreglo.find((n) => n === aleatorio);\r\n        if (!rpta) {\r\n            arreglo.push(aleatorio);\r\n            cont++;\r\n        }\r\n        if (arreglo.length === cantidad) listo = true;\r\n    }\r\n    return arreglo;\r\n};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Carousel } from 'react-bootstrap';\r\nimport { arregloSinRepetir } from '../../../services/numerosAleatorios';\r\n\r\nimport logo from \"./../../../assets/img/logo_transparente.png\";\r\n\r\nconst ClienteCarruselIndex = ({ arregloProductos, arregloCategorias }) => {\r\n\r\n    // console.log(arregloProductos);\r\n    // console.log(arregloCategorias);\r\n\r\n    // generamos un arreglo de 5 numeros aleatorios no repetidos\r\n    const [aleatorio, setAleatorio] = useState(arregloSinRepetir(5));\r\n    const [slider, setSlider] = useState([]);\r\n\r\n    const getAllProductos = async () => {\r\n\r\n        // mapeo del arreglo de indices (aleatorio) que coincidan con el indice del objProductos\r\n        const filtradoProductos = aleatorio.map((item) => arregloProductos[item - 1]);\r\n\r\n        let temporal = [];\r\n\r\n        for (let i = 0; i < arregloCategorias.length; i++) {\r\n            filtradoProductos.filter((pro) => {\r\n                if (pro.categoria_id == arregloCategorias[i].categoria_id) {\r\n                    let obj = { ...pro, categoria_nombre: arregloCategorias[i].categoria_nom }\r\n                    temporal.push(obj);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        setSlider(temporal);\r\n        // console.log(\"tempral\");\r\n        // console.log(temporal);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllProductos();\r\n    }, [arregloProductos, arregloCategorias]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                slider.length === 0 ?\r\n                    <Carousel\r\n                        className=\"carrusel\"\r\n                        fade={true}\r\n                        prevIcon={<span className=\"carousel-control-next-icon carrusel-flecha\"><i className=\"fas fa-chevron-left\"></i></span>}\r\n                        nextIcon={<span className=\"carousel-control-next-icon carrusel-flecha\"><i className=\"fas fa-chevron-right\"></i></span>}\r\n                    >\r\n                        <Carousel.Item className=\"w-100\">\r\n                            <img\r\n                                className=\"d-block w-100 slider-producto\"\r\n                                src={logo}\r\n                                alt=\"Fourth slide\"\r\n                            />\r\n                        </Carousel.Item>\r\n\r\n                    </Carousel>\r\n                    :\r\n                    <Carousel fade={true}\r\n                        prevIcon={<span className=\"carousel-control-next-icon carrusel-flecha\"><i className=\"fas fa-chevron-left\"></i></span>}\r\n                        nextIcon={<span className=\"carousel-control-next-icon carrusel-flecha\"><i className=\"fas fa-chevron-right\"></i></span>}\r\n                    >\r\n\r\n                        {\r\n                            slider.map(item => {\r\n                                return <Carousel.Item key={item.producto_id}>\r\n                                    <img\r\n                                        className=\"d-block w-100 slider-producto\"\r\n                                        src={item.producto_img}\r\n                                        alt=\"First slide\"\r\n                                    />\r\n                                    <Carousel.Caption>\r\n                                        <h3 className=\"bg-dark\">{item.producto_nom}</h3>\r\n                                    </Carousel.Caption>\r\n                                </Carousel.Item>\r\n                            })\r\n                        }\r\n\r\n                    </Carousel>\r\n            }\r\n\r\n            <Button className=\"boton-ordenar\">ORDENAR AHORA</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteCarruselIndex;\r\n","import React, { useContext } from 'react';\r\nimport { Button, Form, FormControl, Nav, Navbar } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport logo from \"./../../../assets/img/logo_transparente.png\";\r\nimport ClienteContext from '../context/ClienteContext';\r\n\r\nimport \"./ClienteHeaderIndex.css\";\r\n\r\nconst ClienteHeaderIndex = () => {\r\n\r\n    const { clienteActivo, cerrarSesionCliente } = useContext(ClienteContext);\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className=\"p-0 contenedor__navbar\" collapseOnSelect expand=\"md\">\r\n\r\n                <Navbar.Brand className=\"p-0\" href=\"/\">\r\n                    <img src={logo} alt=\"\" loading=\"lazy\" />\r\n                </Navbar.Brand>\r\n\r\n                <Navbar.Toggle className=\"d-lg-none\" aria-controls=\"responsive-navbar-nav\" >\r\n                    <span className=\"navbar-toggler-icon\">\r\n                        <i className=\"fas fa-bars\"></i>\r\n                    </span>\r\n                </Navbar.Toggle>\r\n\r\n                <Navbar.Collapse id=\"responsive-navbar-nav contenedor__navbar-colapsado\">\r\n                    <Nav className=\"mr-auto mt-2 mt-lg-0 contenedor__navbar-colapsado-nav\">\r\n                        <NavLink className=\"nav-link item-enlace\" activeClassName=\"active\" to={\"/\"} ><span className=\"item-enlace-texto\">INICIO</span></NavLink>\r\n                        <NavLink className=\"nav-link item-enlace\" activeClassName=\"active\" to={\"/productos\"} ><span className=\"item-enlace-texto\">PRODUCTOS</span></NavLink>\r\n                        <NavLink className=\"nav-link item-enlace\" activeClassName=\"active\" to={\"/\"} ><span className=\"item-enlace-texto\">NOSOTROS</span></NavLink>\r\n                        <NavLink className=\"nav-link item-enlace\" activeClassName=\"active\" to={\"/\"} ><span className=\"item-enlace-texto\">CONTACTO</span></NavLink>\r\n\r\n                        {/* <Nav.Link className=\"item-enlace item-busqueda py-0\">\r\n                            <Form inline className=\"my-2 my-lg-0 mr-3 item-busqueda-form\">\r\n                                <FormControl className=\"mr-sm-2 item-busqueda-form-input\" type=\"text\" placeholder=\"Búsqueda\" />\r\n                                <Button variant=\"my-2 my-sm-0 item-busqueda-form-button\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </Button>\r\n                            </Form>\r\n                        </Nav.Link> */}\r\n\r\n                        {/* SESION INICIADA */}\r\n                        <NavLink className={clienteActivo ? \"item-enlace item-login nav-link\" : \"item-enlace item-carrito nav-link\"} to={clienteActivo ? \"#\" : \"/login\"}>\r\n                            <div>\r\n                                {\r\n                                    clienteActivo === null ?\r\n                                        <i className=\"fas fa-user-plus mr-3\"><span>Login</span></i>\r\n                                        :\r\n                                        <i className=\"fas fa-user-tie mr-3\"><span>{clienteActivo.cliente_nom} {clienteActivo.cliente_apepat}</span></i>\r\n                                }\r\n                            </div>\r\n                        </NavLink>\r\n\r\n                        <NavLink className=\"item-enlace item-carrito nav-link\" to={\"/registro\"} hidden={clienteActivo === null ? false : true}>\r\n                            <div>\r\n                                <i className=\"fas fa-user mr-3\"><span>Registro</span></i>\r\n                            </div>\r\n                        </NavLink>\r\n\r\n                        <NavLink className=\"item-enlace item-carrito nav-link\" to={\"/\"} hidden={clienteActivo === null ? true : false}>\r\n                            <div>\r\n                                <i className=\"fas fa-sign-out-alt mr-3\" onClick={() => { cerrarSesionCliente() }}><span>Salir</span></i>\r\n                            </div>\r\n                        </NavLink>\r\n                        {/* SESION INICIADA */}\r\n\r\n                        <NavLink className=\"item-enlace item-carrito nav-link\" to={\"/carrito\"}>\r\n                            <div>\r\n                                <i className=\"fas fa-shopping-cart mr-3\"></i>\r\n                            </div>\r\n                        </NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n\r\n            </Navbar>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default ClienteHeaderIndex;\r\n","import React from 'react';\r\n\r\nconst ClienteOfertasDiaCardIndex = ({ producto }) => {\r\n    return (\r\n        <div className=\"card card-ofertas\">\r\n            <img className=\"card-ofertas-img\" src={producto.producto_img} alt=\"ofertas\" />\r\n            <div className=\"card-body card-ofertas-information\">\r\n                <div className=\"card-ofertas-information-top\">\r\n                    <h5 className=\"card-title\">{ producto.producto_nom}</h5>\r\n                    <h6 className=\"card-subtitle\">{ producto.categoria_nombre}</h6>\r\n                </div>\r\n                <p className=\"card-text card-ofertas-information-bottom\">S/. { producto.producto_pre}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClienteOfertasDiaCardIndex;\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { arregloSinRepetir } from '../../../services/numerosAleatorios';\r\nimport ClienteOfertasDiaCardIndex from './ClienteOfertasDiaCardIndex';\r\n\r\nconst ClienteOfertasDiaIndex = ({ arregloProductos, arregloCategorias }) => {\r\n\r\n    // generamos un arreglo de 5 numeros aleatorios no repetidos\r\n    const [aleatorio, setAleatorio] = useState(arregloSinRepetir(6));\r\n    const [cardProducto, setCardProducto] = useState([]);\r\n\r\n    const getAllProductos = async () => {\r\n\r\n        // mapeo del arreglo de indices (aleatorio) que coincidan con el indice del objProductos\r\n        const filtradoProductos = aleatorio.map((item) => arregloProductos[item - 1]);\r\n\r\n        let temporal = [];\r\n\r\n        for (let i = 0; i < arregloCategorias.length; i++) {\r\n            filtradoProductos.filter((pro) => {\r\n                if (pro.categoria_id == arregloCategorias[i].categoria_id) {\r\n                    let obj = { ...pro, categoria_nombre: arregloCategorias[i].categoria_nom }\r\n                    temporal.push(obj);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        setCardProducto(temporal);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllProductos();\r\n    }, [arregloProductos, arregloCategorias]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section-bottom-fondo\"></div>\r\n\r\n            <div className=\"section-bottom-titulo\">\r\n                <h3 className=\"\">Sugerencias</h3>\r\n            </div>\r\n\r\n            <div className=\"section-bottom-ofertas row\">\r\n                {\r\n                    cardProducto.map(pro => {\r\n                        return <ClienteOfertasDiaCardIndex key={pro.producto_id} producto={pro} />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteOfertasDiaIndex;\r\n","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport ClienteFooter from '../../../../components/ClienteFooter';\r\nimport { getCategorias } from '../../../../services/categoriaService';\r\nimport { getProductos } from '../../../../services/productoService';\r\nimport ClienteCarruselIndex from '../../components/ClienteCarruselIndex';\r\nimport ClienteHeaderIndex from '../../components/ClienteHeaderIndex';\r\nimport ClienteOfertasDiaIndex from '../../components/ClienteOfertasDiaIndex';\r\n\r\nimport \"./ClienteIndexScreen.css\";\r\n\r\nconst ClienteIndexScreen = () => {\r\n\r\n    const [pro, setPro] = useState([]);\r\n    const [cat, setCat] = useState([]);\r\n\r\n    const getAllProductos = async () => {\r\n\r\n        let objProductos = [];\r\n        let objCategorias = [];\r\n\r\n        objProductos = await getProductos().then(data => {\r\n            return data;\r\n        });\r\n\r\n        objCategorias = await getCategorias().then(data => {\r\n            return data;\r\n        });\r\n\r\n        setPro(objProductos);\r\n        setCat(objCategorias);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllProductos();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <ClienteHeaderIndex />\r\n\r\n            <main>\r\n                <section className=\"section-top\">\r\n                    <ClienteCarruselIndex arregloProductos={pro} arregloCategorias={cat} />\r\n                </section>\r\n\r\n                <section className=\"section-bottom\">\r\n                    <ClienteOfertasDiaIndex arregloProductos={pro} arregloCategorias={cat} />\r\n                </section>\r\n            </main>\r\n\r\n            <ClienteFooter />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteIndexScreen;\r\n","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getClienteById = async (id) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/cliente/${id}`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const getClienteByDNI = async (dni) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/cliente?cliente_dni=${dni}`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const postCliente = async (objCliente) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/cliente`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(objCliente),\r\n    });\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getUsuarioByEmail = async (email) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/usuario?usuario_email=${email}`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const postUsuario = async (objUsuario) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/usuario`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(objUsuario),\r\n    });\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from \"sweetalert2\";\r\nimport { getClienteById } from '../../../services/clienteService';\r\nimport { getUsuarioByEmail } from '../../../services/usuarioService';\r\nimport ClienteContext from '../context/ClienteContext';\r\n\r\nconst formularioVacio = {\r\n    usuario_email: \"\",\r\n    usuario_password: \"\",\r\n};\r\n\r\nconst ClienteFormularioLogin = () => {\r\n\r\n    const { clienteActivo, inicioSesionCliente } = useContext(ClienteContext);\r\n    const [formulario, setFormulario] = useState(formularioVacio);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n\r\n        // console.log(\"VALOR DE EVENTO\");\r\n        // console.log(e.target.type);\r\n\r\n        let valor = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n\r\n        // console.log(valor);\r\n\r\n        setFormulario({\r\n            ...formulario,\r\n            [e.target.name]: valor,\r\n        });\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // recuperamos los datos del formulario\r\n        const form = { ...formulario };\r\n\r\n        // console.log(\"FORMULARIO RECUPERADO\");\r\n        // console.log(form);\r\n\r\n        // verificar campos vacios\r\n        if (\r\n            (form.usuario_email.trim() === \"\") |\r\n            (form.usuario_password.trim() === \"\")\r\n        ) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"Los campos no deben estar vacíos\",\r\n                icon: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        // validar email\r\n        let mailformat = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n\r\n        if (!form.usuario_email.trim().match(mailformat)) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"Debes ingresar una direccion de correo valida\",\r\n                icon: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        // verificar si existe un email registrado\r\n        let usuarioEmail = [];\r\n        usuarioEmail = await getUsuarioByEmail(form.usuario_email.trim()).then(data => {\r\n            if (data !== null) {\r\n                let busqueda = data.filter((email) => {\r\n                    if (email.usuario_email == form.usuario_email.trim()) {\r\n                        return email;\r\n                    }\r\n                    return undefined;\r\n                });\r\n                return busqueda;\r\n            }\r\n        });\r\n\r\n        // console.log(\"VERIFICACION EMAIL\");\r\n        // console.log(usuarioEmail);\r\n\r\n        if (usuarioEmail.length === 0) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"El email ingresado no existe. Lo invitamos a registrarse\",\r\n                icon: \"info\",\r\n                showClass: {\r\n                    popup: 'animate__animated animate__fadeInDown'\r\n                },\r\n                hideClass: {\r\n                    popup: 'animate__animated animate__fadeOutUp'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        // verificar contraseña ingresada\r\n        if (form.usuario_password.trim() !== usuarioEmail[0].usuario_password) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"La contraseña ingresada no es válida\",\r\n                icon: \"info\",\r\n                showClass: {\r\n                    popup: 'animate__animated animate__fadeInDown'\r\n                },\r\n                hideClass: {\r\n                    popup: 'animate__animated animate__fadeOutUp'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        // LOGUEADO CORRECTAMENTE, RECUPERAMOS LA INFORMACION DE CLIENTE\r\n        const clienteLogueado = await getClienteById(usuarioEmail[0].usuario_id).then(data => data);\r\n\r\n        if (clienteLogueado.cliente_id) {\r\n            // console.log(\"USUARIO LOGUEADO\");\r\n            // console.log(clienteLogueado);\r\n\r\n            inicioSesionCliente(clienteLogueado);\r\n            // console.log(\"actualizado state inicio sesion\");\r\n            // console.log(clienteActivo);\r\n\r\n            // if (localStorage.getItem(\"token\")) {\r\n\r\n            //     let data = localStorage.getItem(\"token\");\r\n            //     console.log(\"contenido token\");\r\n            //     console.log(data);\r\n            // }\r\n\r\n            history.push(\"/\");\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form className=\"needs-validation\" noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            {/* NOMBRE */}\r\n            <div className=\"form-row\">\r\n                <div className=\"col-md-12 mb-3 mt-3\">\r\n                    <label htmlFor=\"inputCorreo\">Correo</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control input-login\"\r\n                        id=\"inputCorreo\"\r\n                        placeholder=\"Ingrese correo electrónico\"\r\n                        value={formulario.usuario_email}\r\n                        name=\"usuario_email\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Por favor, ingresar datos correctos.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* CONTRASEÑA */}\r\n                <div className=\"col-md-12 mb-3 mt-3\">\r\n                    <label htmlFor=\"inputPasswd\">Contraseña</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control input-login\"\r\n                        id=\"inputPasswd\"\r\n                        placeholder=\"Ingrese contraseña\"\r\n                        value={formulario.usuario_password}\r\n                        name=\"usuario_password\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Por favor, ingresar datos correctos.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* BOTON LOGIN */}\r\n            <button className=\"btn btn-outline-success mb-3\" type=\"submit\">Iniciar Sesión</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ClienteFormularioLogin;\r\n","import React from 'react';\r\nimport ClienteFooter from '../../../../components/ClienteFooter';\r\nimport ClienteHeader from '../../../../components/ClienteHeader';\r\nimport ClienteFormularioLogin from '../../components/ClienteFormularioLogin';\r\n\r\nimport \"./ClienteLoginScreen.css\";\r\n\r\nconst ClienteLoginScreen = () => {\r\n    return (\r\n        <>\r\n            <ClienteHeader pagina=\"LOGIN\" />\r\n\r\n            <main className=\"login\">\r\n                <section className=\"row justify-content-center w-100\">\r\n                    <div className=\"col-md-8 bg-white border\">\r\n                        <ClienteFormularioLogin />\r\n                    </div>\r\n                </section>\r\n            </main>\r\n\r\n            <ClienteFooter />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteLoginScreen;\r\n","import React from 'react';\r\n\r\nlet temporal = [];\r\n\r\nconst ClienteFiltroFormCheckProducto = ({ categoria, filtradoCategorias, modificarProductoCategoria, arregloFiltrado, arregloFiltro }) => {\r\n\r\n    const handleChange = (e) => {\r\n        let valor = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n\r\n        temporal = [...arregloFiltro];\r\n\r\n        if (temporal.length === 0) {\r\n            if (valor) {\r\n                temporal.push(e.target.name)\r\n            }\r\n        } else {\r\n\r\n            if (!valor) {\r\n                let item = temporal.indexOf(e.target.name);\r\n                temporal.splice(item, 1);\r\n            } else {\r\n                if (temporal.indexOf(e.target.name) == -1) {\r\n                    temporal.push(e.target.name)\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\"arreglo filtro\");\r\n        // console.log(arregloFiltro);\r\n\r\n        // console.log(\"temporal\");\r\n        // console.log(temporal);\r\n\r\n        arregloFiltrado(temporal);\r\n        let nuevo = filtradoCategorias(temporal);\r\n\r\n        // console.log(\"nuevo\");\r\n        // console.log(nuevo);\r\n        modificarProductoCategoria(nuevo);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-check\">\r\n            \r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                id=\"checkActivo\"\r\n                name={categoria.categoria_id}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            <label className=\"form-check-label\" htmlFor=\"checkActivo\">{categoria.categoria_nom}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClienteFiltroFormCheckProducto;\r\n","import React from 'react';\r\nimport ClienteFiltroFormCheckProducto from './ClienteFiltroFormCheckProducto';\r\n\r\nconst ClienteAsideFiltroFormCheckProducto = ({ categorias, filtradoCategorias, modificarProductoCategoria, arregloFiltrado, arregloFiltro }) => {\r\n    return (\r\n        <aside className=\"productos__filtro\">\r\n            <form className=\"productos__filtro-formulario\">\r\n                <label htmlFor=\"\">CATEGORIAS</label>\r\n                {\r\n                    categorias.map(categoria => {\r\n                        return <ClienteFiltroFormCheckProducto key={categoria.categoria_id} categoria={categoria} filtradoCategorias={filtradoCategorias} modificarProductoCategoria={modificarProductoCategoria} arregloFiltrado={arregloFiltrado} arregloFiltro={arregloFiltro}/>\r\n                    })\r\n                }\r\n\r\n            </form>\r\n\r\n            <hr />\r\n\r\n            <form className=\"productos__filtro-formulario\">\r\n                <label htmlFor=\"\">FILTRAR POR PRECIO</label>\r\n                <span id=\"ex18-label-2a\" className=\"sr-only rango\">Example low value</span>\r\n                <span id=\"ex18-label-2b\" className=\"sr-only rango\">Example high value</span>\r\n                <input id=\"ex18b\" type=\"text\" />\r\n\r\n                <p>Precio: <span>S/ 100</span> - <span>S/ 400</span></p>\r\n            </form>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default ClienteAsideFiltroFormCheckProducto;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport ClienteContext from '../context/ClienteContext';\r\n\r\nconst ClienteListaCardFormCheckProducto = ({ proCat }) => {\r\n\r\n    const { agregarProducto, globalPedidos, clienteActivo } = useContext(ClienteContext);\r\n\r\n    const [c, actualizarC] = useState(1);\r\n    const [modoBoton, setModoBoton] = useState(false);\r\n\r\n    const restar = () => {\r\n        if (c !== 1) {\r\n            actualizarC(c - 1);\r\n        }\r\n    };\r\n\r\n    const sumar = () => {\r\n        actualizarC(c + 1);\r\n    };\r\n\r\n    const verificar = () => {\r\n        \r\n        const pedidoExistente = globalPedidos.find(objPedido => objPedido.producto_id === proCat.producto_id);\r\n        if (pedidoExistente) {\r\n            proCat = { ...pedidoExistente };\r\n            actualizarC(proCat.cantidad);\r\n            setModoBoton(true);\r\n        }\r\n        // console.log(pedidoExistente);\r\n    };\r\n\r\n    useEffect(() => {\r\n        verificar();\r\n    }, [modoBoton, clienteActivo])\r\n\r\n\r\n    return (\r\n        <div className=\"card productos__card\">\r\n            {/* HOVER PARA AGREGAR AL CARRITO DE COMPRAS */}\r\n            <div className=\"productos__card-hide\">\r\n                <div className=\"contenedor-boton-cantidad\">\r\n                    <div className=\"cantidad\">\r\n\r\n                        {/* BOTON RESTAR */}\r\n                        <button\r\n                            className=\"boton-cantidad-left\"\r\n                            onClick={() => {\r\n                                restar();\r\n                            }}\r\n                        >\r\n                            -\r\n                            </button>\r\n\r\n\r\n                        {/* CANTIDAD */}\r\n                        <span className=\"text-center\">{c}</span>\r\n\r\n\r\n                        {/* BOTON SUMAR */}\r\n                        <button\r\n                            className=\"boton-cantidad-right\"\r\n                            onClick={() => {\r\n                                sumar();\r\n                            }}\r\n                        >\r\n                            +\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"agregar__carrito\">\r\n                    {\r\n                        modoBoton ?\r\n                            <button\r\n                                className=\"actualizar__carrito-boton\"\r\n                                onClick={() => {\r\n                                    let monto = proCat.producto_pre * c;\r\n                                    setModoBoton(true);\r\n                                    agregarProducto({\r\n                                        ...proCat,\r\n                                        cantidad: c,\r\n                                        monto: monto,\r\n                                    })\r\n                                }}\r\n                            >\r\n                                Actualizar <i className=\"fas fa-shopping-cart\"></i>\r\n                            </button>\r\n                            :\r\n                            <button\r\n                                className=\"agregar__carrito-boton\"\r\n                                onClick={() => {\r\n                                    let monto = proCat.producto_pre * c;\r\n                                    setModoBoton(true);\r\n                                    agregarProducto({\r\n                                        ...proCat,\r\n                                        cantidad: c,\r\n                                        monto: monto,\r\n                                    })\r\n                                }}\r\n                            >\r\n                                Agregar a <i className=\"fas fa-shopping-cart\"></i>\r\n                            </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            {/* CARD DE PRODUCTOS */}\r\n            <img className=\"card-img-top productos__card-img\" src={proCat.producto_img} alt=\"producto\" />\r\n            <div className=\"card-body text-center\">\r\n                <h5 className=\"card-title\">{proCat.producto_nom}</h5>\r\n                <h6 className=\"card-subtitle\">{proCat.categoria_nombre}</h6>\r\n                <p className=\"card-text\">S/. {proCat.producto_pre}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClienteListaCardFormCheckProducto;\r\n","import React from 'react';\r\nimport ClientePaginacion from '../../../components/ClientePaginacion';\r\nimport ClienteListaCardFormCheckProducto from './ClienteListaCardFormCheckProducto';\r\n\r\nconst ClienteListaFormCheckProducto = ({ productoCategoria }) => {\r\n    // console.log(\"producto categoria\");\r\n    // console.log(productoCategoria);\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"productos__lista\">\r\n                {\r\n                    productoCategoria.map(proCat => {\r\n                        return <ClienteListaCardFormCheckProducto key={proCat.producto_id} proCat={proCat} />\r\n                    })\r\n                }\r\n                {/* <ClienteListaCardFormCheckProducto /> */}\r\n            </div>\r\n\r\n            \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ClienteListaFormCheckProducto;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ClienteFooter from '../../../../components/ClienteFooter';\r\nimport ClienteHeader from '../../../../components/ClienteHeader';\r\n// import ClientePaginacion from '../../../../components/ClientePaginacion';\r\nimport { getCategorias } from '../../../../services/categoriaService';\r\nimport { getProductos } from '../../../../services/productoService';\r\nimport ClienteAsideFiltroFormCheckProducto from '../../components/ClienteAsideFiltroFormCheckProducto';\r\nimport ClienteListaFormCheckProducto from '../../components/ClienteListaFormCheckProducto';\r\n\r\nimport \"./ClienteProductoScreen.css\";\r\n\r\nconst ClienteProductoScreen = () => {\r\n\r\n    const [productoCategoria, setProductoCategoria] = useState([]);\r\n    const [productoCategoriaGlobal, setProductoCategoriaGlobal] = useState([]);\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    const [arregloFiltro, setArregloFiltro] = useState([]);\r\n\r\n    // FUNCION QUE TRAE TODOS LOS PRODUCTOS Y SUS CATEGORIAS\r\n    const getAllProductos = async () => {\r\n\r\n        let objProductos = [];\r\n        let objCategorias = [];\r\n\r\n        objProductos = await getProductos().then(data => {\r\n            return data;\r\n        });\r\n\r\n        objCategorias = await getCategorias().then(data => {\r\n            return data;\r\n        });\r\n\r\n        let temporal = [];\r\n\r\n        for (let i = 0; i < objCategorias.length; i++) {\r\n            objProductos.filter((pro) => {\r\n                if (pro.categoria_id == objCategorias[i].categoria_id) {\r\n                    let obj = { ...pro, categoria_nombre: objCategorias[i].categoria_nom }\r\n                    temporal.push(obj);\r\n                }\r\n            });\r\n        }\r\n\r\n        setProductoCategoria(temporal);\r\n        setProductoCategoriaGlobal(temporal);\r\n        setCategorias(objCategorias);\r\n\r\n        // console.log(temporal);\r\n        // console.log(objCategorias);\r\n\r\n    };\r\n\r\n    // FUNCION QUE FILTRA POR CATEGORIAS\r\n    const filtradoCategorias = (arreglo) => {\r\n\r\n        let temporal = [];\r\n\r\n        for (let i = 0; i < arreglo.length; i++) {\r\n            productoCategoriaGlobal.filter((pro) => {\r\n                if (pro.categoria_id == arreglo[i]) {\r\n                    let obj = { ...pro }\r\n                    temporal.push(obj);\r\n                }\r\n            });\r\n        }\r\n\r\n        return temporal;\r\n    };\r\n\r\n    // FUNCION QUE SETEA PRODUCTO CATEGORIA\r\n    const modificarProductoCategoria = (nuevo) => {\r\n        if (nuevo.length == 0) {\r\n            setProductoCategoria(productoCategoriaGlobal);\r\n        } else {\r\n            setProductoCategoria(nuevo);\r\n        }\r\n\r\n    };\r\n\r\n    //ARREGLO FILTRO\r\n    const arregloFiltrado = (valor) => {\r\n        setArregloFiltro(valor)\r\n        console.log(\"set arreglo filtro\");\r\n        console.log(arregloFiltro);\r\n    };\r\n\r\n\r\n\r\n    // LLAMADO A FUNCIONES\r\n\r\n    useEffect(() => {\r\n        getAllProductos();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [productoCategoria]);\r\n\r\n    return (\r\n        <>\r\n            <ClienteHeader pagina=\"PRODUCTOS\" />\r\n\r\n            <main className=\"productos\">\r\n                <ClienteAsideFiltroFormCheckProducto categorias={categorias} filtradoCategorias={filtradoCategorias} modificarProductoCategoria={modificarProductoCategoria} arregloFiltrado={arregloFiltrado} arregloFiltro={arregloFiltro} />\r\n\r\n                <ClienteListaFormCheckProducto productoCategoria={productoCategoria} />\r\n\r\n            </main>\r\n\r\n            {/* PENDIENTE COLOCAR PAGINACION */}\r\n            {/* <ClientePaginacion /> */}\r\n\r\n            <ClienteFooter />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteProductoScreen;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from \"sweetalert2\";\r\nimport { getClienteByDNI, postCliente } from '../../../services/clienteService';\r\nimport { getUsuarioByEmail, postUsuario } from '../../../services/usuarioService';\r\n\r\nconst formularioVacio = {\r\n    cliente_nom: \"\",\r\n    cliente_apepat: \"\",\r\n    cliente_apemat: \"\",\r\n    cliente_dni: \"\",\r\n    cliente_tel: \"\",\r\n    cliente_dir: \"\",\r\n    cliente_distrito: 0,\r\n    cliente_distrito_nombre: \"\",\r\n    usuario_email: \"\",\r\n    usuario_password: \"\",\r\n    usuario_password_confirm: \"\",\r\n};\r\n\r\nconst ClienteFormularioRegistro = () => {\r\n\r\n    const [formulario, setFormulario] = useState(formularioVacio);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n\r\n        // console.log(\"VALOR DE EVENTO\");\r\n        // console.log(e.target.type);\r\n\r\n        let valor = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n        let distrito = formulario.cliente_distrito_nombre;\r\n\r\n        // recuperamos el nombre del distrito\r\n        if (e.target.type === \"select-one\") {\r\n            distrito = e.target.options[e.target.selectedIndex].text;\r\n        }\r\n\r\n        // console.log(valor);\r\n\r\n        setFormulario({\r\n            ...formulario,\r\n            [e.target.name]: valor,\r\n            cliente_distrito_nombre: distrito,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // recuperamos los datos del formulario\r\n        const form = { ...formulario };\r\n\r\n        // verificar campos vacios\r\n        if (\r\n            (form.cliente_nom.trim() === \"\") |\r\n            (form.cliente_apepat.trim() === \"\") |\r\n            (form.cliente_apemat.trim() === \"\") |\r\n            (form.cliente_dni.trim() === \"\") |\r\n            (form.cliente_tel.trim() === \"\") |\r\n            (form.cliente_dir.trim() === \"\") |\r\n            (form.cliente_distrito == \"0\") |\r\n            (form.usuario_email.trim() === \"\") |\r\n            (form.usuario_password.trim() === \"\") |\r\n            (form.usuario_password_confirm.trim() === \"\")\r\n        ) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"Los campos no deben estar vacíos\",\r\n                icon: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        // verificar longitud del campo DNI\r\n        if (form.cliente_dni.trim().length < 8) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"El DNI debe contener 8 digitos\",\r\n                icon: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        // verificar que las contraseñas coincidan\r\n        if (form.usuario_password.trim() !== form.usuario_password_confirm.trim()) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"Las contraseñas deben ser iguales\",\r\n                icon: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        // validar email\r\n        let mailformat = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n\r\n        if (!form.usuario_email.match(mailformat)) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"Debes ingresar una direccion de correo valida\",\r\n                icon: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        // verificar si ya existe un email registrado\r\n        let usuarioEmail = [];\r\n        usuarioEmail = await getUsuarioByEmail(form.usuario_email).then(data => {\r\n            if (data !== null) {\r\n                let busqueda = data.filter((email) => {\r\n                    if (email.usuario_email == form.usuario_email) {\r\n                        return email;\r\n                    }\r\n                    return undefined;\r\n                });\r\n                return busqueda;\r\n            }\r\n        });\r\n\r\n        // console.log(\"email\");\r\n        // console.log(usuarioEmail.length);\r\n\r\n        if (usuarioEmail.length > 0) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"El email ingresado ya se encuentra registrado\",\r\n                icon: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n        // verificar si ya existe un DNI registrado en la tabla clientes\r\n        let clienteDNI = await getClienteByDNI(form.cliente_dni).then(data => data);\r\n\r\n        if (clienteDNI.length > 0) {\r\n            Swal.fire({\r\n                title: \"Upss!!!\",\r\n                text: \"El DNI ya se encuentra registrado. Debe iniciar sesion\",\r\n                icon: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        // si todo esta correcto, se realizara el registro\r\n\r\n        const dataUsuario = {\r\n            tipousuario_id: 1,\r\n            usuario_email: form.usuario_email,\r\n            usuario_password: form.usuario_password,\r\n            usuario_estado: true,\r\n        }\r\n\r\n        const dataCliente = {\r\n            usuario_id: 0,\r\n            cliente_nom: form.cliente_nom,\r\n            cliente_apepat: form.cliente_apepat,\r\n            cliente_apemat: form.cliente_apemat,\r\n            cliente_dni: form.cliente_dni,\r\n            cliente_tel: form.cliente_tel,\r\n            cliente_dir: form.cliente_dir + \" - \" + form.cliente_distrito_nombre,\r\n            cliente_estado: true,\r\n        }\r\n\r\n        // debemos crear primero el usuario\r\n        postUsuario(dataUsuario).then(rpta => {\r\n            // console.log(\"USUARIO CREADO\");\r\n\r\n            if (rpta.usuario_id) {\r\n\r\n                let objCliente = {\r\n                    ...dataCliente,\r\n                    usuario_id: rpta.usuario_id,\r\n                };\r\n\r\n                // si todo esta correcto, creamos el cliente\r\n                postCliente(objCliente).then(data => {\r\n                    if (data.cliente_id) {\r\n                        // limpiamos el formulario\r\n                        setFormulario(formularioVacio);\r\n\r\n                        Swal.fire({\r\n                            position: 'top-end',\r\n                            icon: 'success',\r\n                            title: 'Registro completo',\r\n                            showConfirmButton: false,\r\n                            timer: 1500\r\n                        })\r\n\r\n                        history.push(\"/login\");\r\n                    }\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'error',\r\n                    title: 'Error al registrar',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"needs-validation\" noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <div className=\"form-row\">\r\n                {/* NOMBRE */}\r\n                <div className=\"col-md-4 mb-3 mt-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputName\">Nombre</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control input-registro\"\r\n                        id=\"inputName\"\r\n                        placeholder=\"Ingrese nombre\"\r\n                        value={formulario.cliente_nom}\r\n                        name=\"cliente_nom\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Por favor, ingresar datos correctos.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* APELLIDO PATERNO */}\r\n                <div className=\"col-md-4 mb-3 mt-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputLastNameP\">Apellido Paterno</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control input-registro\"\r\n                        id=\"inputLastNameP\"\r\n                        placeholder=\"Ingrese apellido paterno\"\r\n                        value={formulario.cliente_apepat}\r\n                        name=\"cliente_apepat\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Por favor, ingresar datos correctos.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* APELLIDO MATERNO */}\r\n                <div className=\"col-md-4 mb-3 mt-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputLastNameM\">Apellido Materno</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control input-registro\"\r\n                        id=\"inputLastNameM\"\r\n                        placeholder=\"Ingrese apellido materno\"\r\n                        value={formulario.cliente_apemat}\r\n                        name=\"cliente_apemat\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Por favor, ingresar datos correctos.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* DNI */}\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputDNI\">DNI</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        minLength=\"8\"\r\n                        maxLength=\"8\"\r\n                        className=\"form-control input-registro\"\r\n                        id=\"inputDNI\"\r\n                        placeholder=\"Ingrese número de DNI\"\r\n                        value={formulario.cliente_dni}\r\n                        name=\"cliente_dni\"\r\n                        onChange={handleChange}\r\n                        aria-describedby=\"inputDNIPrepend\"\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Ingrese un DNI válido.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* TELEFONO */}\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputPhone\">Celular</label>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"inputPhonePrepend\">+51</span>\r\n                        </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            minLength=\"9\"\r\n                            maxLength=\"9\"\r\n                            className=\"form-control input-registro\"\r\n                            id=\"inputPhone\"\r\n                            placeholder=\"Ingrese número celular\"\r\n                            value={formulario.cliente_tel}\r\n                            name=\"cliente_tel\"\r\n                            onChange={handleChange}\r\n                            aria-describedby=\"inputPhonePrepend\"\r\n                            required\r\n                        />\r\n                        <div className=\"invalid-tooltip\">\r\n                            Ingrese un número de teléfono válido.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* DISTRITO */}\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputDistrict\">Distrito</label>\r\n                    <select\r\n                        className=\"custom-select\"\r\n                        id=\"inputDistrict\"\r\n                        name=\"cliente_distrito\"\r\n                        value={formulario.cliente_distrito}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"0\">Seleccione Distrito</option>\r\n                        <option value=\"1\">ANCON</option>\r\n                        <option value=\"2\">ATE</option>\r\n                        <option value=\"3\">BARRANCO</option>\r\n                        <option value=\"4\">BREÑA</option>\r\n                        <option value=\"5\">CARABAYLLO</option>\r\n                        <option value=\"6\">CHACLACAYO</option>\r\n                        <option value=\"7\">CHORRILLOS</option>\r\n                        <option value=\"8\">CIENEGUILLA</option>\r\n                        <option value=\"9\">COMAS</option>\r\n                        <option value=\"10\">EL AGUSTINO</option>\r\n                        <option value=\"11\">INDEPENDENCIA</option>\r\n                        <option value=\"12\">JESUS MARIA</option>\r\n                        <option value=\"13\">LA MOLINA</option>\r\n                        <option value=\"14\">LA VICTORIA</option>\r\n                        <option value=\"15\">LIMA</option>\r\n                        <option value=\"16\">LINCE</option>\r\n                        <option value=\"17\">LOS OLIVOS</option>\r\n                        <option value=\"18\">LURIGANCHO</option>\r\n                        <option value=\"19\">LURIN</option>\r\n                        <option value=\"20\">MAGDALENA DEL MAR</option>\r\n                        <option value=\"21\">MIRAFLORES</option>\r\n                        <option value=\"22\">PACHACAMAC</option>\r\n                        <option value=\"23\">PUCUSANA</option>\r\n                        <option value=\"24\">PUEBLO LIBRE</option>\r\n                        <option value=\"25\">PUENTE PIEDRA</option>\r\n                        <option value=\"26\">PUNTA HERMOSA</option>\r\n                        <option value=\"27\">PUNTA NEGRA</option>\r\n                        <option value=\"28\">RIMAC</option>\r\n                        <option value=\"29\">SAN BARTOLO</option>\r\n                        <option value=\"30\">SAN BORJA</option>\r\n                        <option value=\"31\">SAN ISIDRO</option>\r\n                        <option value=\"32\">SAN JUAN DE LURIGANCHO</option>\r\n                        <option value=\"33\">SAN JUAN DE MIRAFLORES</option>\r\n                        <option value=\"34\">SAN LUIS</option>\r\n                        <option value=\"35\">SAN MARTIN DE PORRES</option>\r\n                        <option value=\"36\">SAN MIGUEL</option>\r\n                        <option value=\"37\">SANTA ANITA</option>\r\n                        <option value=\"38\">SANTA MARIA DEL MAR</option>\r\n                        <option value=\"39\">SANTA ROSA</option>\r\n                        <option value=\"40\">SANTIAGO DE SURCO</option>\r\n                        <option value=\"41\">SURQUILLO</option>\r\n                        <option value=\"42\">VILLA EL SALVADOR</option>\r\n                        <option value=\"43\">VILLA MARIA DEL TRIUNFO</option>\r\n                    </select>\r\n                    <div className=\"invalid-feedback\">Elija un distrito.</div>\r\n                </div>\r\n\r\n\r\n                {/* DIRECCION */}\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputDirection\">Dirección</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control input-registro\"\r\n                        id=\"inputDirection\"\r\n                        placeholder=\"Av. Grau 225\"\r\n                        value={formulario.cliente_dir}\r\n                        name=\"cliente_dir\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Ingrese una dirección.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* EMAIL */}\r\n                <div className=\"col-md-4 mb-3 mt-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputCorreo\">Correo</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control input-registro\"\r\n                        id=\"inputCorreo\"\r\n                        placeholder=\"Ingrese correo electrónico\"\r\n                        value={formulario.usuario_email}\r\n                        name=\"usuario_email\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Por favor, ingresar datos correctos.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* CONTRASEÑA */}\r\n                <div className=\"col-md-4 mb-3 mt-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputPasswd1\">Contraseña</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control input-registro\"\r\n                        id=\"inputPasswd1\"\r\n                        placeholder=\"Ingrese contraseña\"\r\n                        value={formulario.usuario_password}\r\n                        name=\"usuario_password\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Por favor, ingresar datos correctos.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* CONFIRMAR CONTRASEÑA */}\r\n                <div className=\"col-md-4 mb-3 mt-3\">\r\n                    <label className=\"registro__label\" htmlFor=\"inputPasswd2\">Confirmar Contraseña</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control input-registro\"\r\n                        id=\"inputPasswd2\"\r\n                        placeholder=\"Confirmar contraseña\"\r\n                        value={formulario.usuario_password_confirm}\r\n                        name=\"usuario_password_confirm\"\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-tooltip\">\r\n                        Por favor, ingresar datos correctos.\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* BOTON REGISTRO */}\r\n                <button className=\"btn btn-outline-success mb-3\" type=\"submit\">Registrarse</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ClienteFormularioRegistro;\r\n","import React from 'react';\r\nimport ClienteFooter from '../../../../components/ClienteFooter';\r\nimport ClienteHeader from '../../../../components/ClienteHeader';\r\nimport ClienteFormularioRegistro from '../../components/ClienteFormularioRegistro';\r\n\r\nimport \"./ClienteRegistroScreen.css\";\r\n\r\nconst ClienteRegistroScreen = () => {\r\n    return (\r\n        <>\r\n            <ClienteHeader pagina=\"REGISTRO\" />\r\n\r\n            <main className=\"productos\">\r\n                <section className=\"row justify-content-center\">\r\n                    <div className=\"col-md-10 bg-white border\">\r\n                        <ClienteFormularioRegistro />\r\n                    </div>\r\n                </section>\r\n            </main>\r\n\r\n            <ClienteFooter />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClienteRegistroScreen;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ClienteState from './context/ClienteState';\r\nimport ClienteCarritoScreen from './screens/carrito/ClienteCarritoScreen';\r\nimport ClienteIndexScreen from './screens/index/ClienteIndexScreen';\r\nimport ClienteLoginScreen from './screens/login/ClienteLoginScreen';\r\nimport ClienteProductoScreen from './screens/producto/ClienteProductoScreen';\r\nimport ClienteRegistroScreen from './screens/registro/ClienteRegistroScreen';\r\n\r\nconst ClienteRouter = () => {\r\n    return (\r\n        <ClienteState>\r\n            <Switch>\r\n                <Route path={\"/login\"} component={ClienteLoginScreen} />\r\n                <Route path={\"/registro\"} component={ClienteRegistroScreen} />\r\n                <Route path={\"/productos\"} component={ClienteProductoScreen} />\r\n                <Route path={\"/carrito\"} component={ClienteCarritoScreen} />\r\n                <Route path={\"/\"} exact component={ClienteIndexScreen} />\r\n            </Switch>\r\n        </ClienteState>\r\n    )\r\n}\r\n\r\nexport default ClienteRouter;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport ClienteRouter from './modules/cliente/ClienteRouter';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        // <Router>\r\n        //     <Switch>\r\n        //         <Route path={\"/\"} component={ClienteRouter} />\r\n        //     </Switch>\r\n        // </Router>\r\n\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route path={\"/\"} component={ClienteRouter} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\nimport AppRouter from './AppRouter';\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <AppRouter />\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}